<!DOCTYPE html>

<html>
<head>
  <title>Project4</title>
  <%= stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track' => true %>
  <%= javascript_include_tag 'application', 'data-turbolinks-track' => true %>
  <script src="//connect.soundcloud.com/sdk-2.0.0.js"></script>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js"></script>
  <%= csrf_meta_tags %>
</head>
<body>
  <header><h2 class="center" style="background-color:blue; margin:0;">visPLAY</h2></header>
  <%= yield %>
</body>
<script>
//use erb to iterate over the @soundc instance variable inorder to dynamically create audio sources onto the DOM
var soundc = document.getElementById('thesound');
<% @soundc[2..8].each do |x| %>
var audio<%= x['id'] %> = new Audio();
audio<%= x['id'] %>.src = "<%= x['stream_url'] %>?client_id=<%=ENV['SoundCloudKey']%>";
audio<%= x['id'] %>.controls = true;
audio<%= x['id'] %>.autoplay = false;
audio<%= x['id'] %>.crossOrigin="anonymous"
document.getElementById("track<%=x['id']%>").appendChild(audio<%=x['id']%>);
<% end %>
//set up Web Audio API by establishing the AudioContext
var context	= new AudioContext();
// Create lineOut
var lineOut	= new WebAudiox.LineOut(context)
lineOut.volume	= 1;
var analyser	= context.createAnalyser()
analyser.connect(lineOut.destination);
lineOut.destination	= analyser;
//
var canvas	= document.getElementById('soundhopper');
canvas.width = window.innerWidth
canvas.height = 400;
var ctx		= canvas.getContext("2d");
document.body.appendChild(canvas)
// create the object
var analyser2canvas	= new WebAudiox.Analyser2Canvas(analyser, canvas)
// loop and update

<% @soundc[2..8].each do |x| %>
window.addEventListener('load', function(e) {
  // Our <audio> element will be the audio source.
  var source = context.createMediaElementSource(audio<%=x['id']%>);
  source.connect(analyser);
  analyser.connect(context.destination);

  requestAnimationFrame(function update() {
  requestAnimationFrame(update);
  // clear the canvas
  ctx.clearRect(0, 0, canvas.width, canvas.height);
  // put the sound in the canvas
  analyser2canvas.update()
  });
  // ...call requestAnimationFrame() and render the analyser's output to canvas.
}, false);
<% end %>
</script>
</html>
